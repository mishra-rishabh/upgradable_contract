/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Square, SquareInterface } from "../Square";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ValueChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "retrieveArea",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retrievePerimeter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "side",
        type: "uint256",
      },
    ],
    name: "storeSide",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061025e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317f3167314610046578063a67b5c3714610062578063fc2a3d0814610080575b600080fd5b610060600480360381019061005b919061012b565b61009e565b005b61006a6100df565b6040516100779190610163565b60405180910390f35b6100886100fa565b6040516100959190610163565b60405180910390f35b806000819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516100d49190610163565b60405180910390a150565b60008060005460046100f1919061017e565b90508091505090565b60008060005460005461010d919061017e565b90508091505090565b60008135905061012581610211565b92915050565b60006020828403121561013d57600080fd5b600061014b84828501610116565b91505092915050565b61015d816101d8565b82525050565b60006020820190506101786000830184610154565b92915050565b6000610189826101d8565b9150610194836101d8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156101cd576101cc6101e2565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61021a816101d8565b811461022557600080fd5b5056fea2646970667358221220f08527b81a1c4a6d3c7be204bff90b194c43097f1ef77b488b8213ff8844f23264736f6c63430008040033";

type SquareConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SquareConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Square__factory extends ContractFactory {
  constructor(...args: SquareConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Square> {
    return super.deploy(overrides || {}) as Promise<Square>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Square {
    return super.attach(address) as Square;
  }
  connect(signer: Signer): Square__factory {
    return super.connect(signer) as Square__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SquareInterface {
    return new utils.Interface(_abi) as SquareInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Square {
    return new Contract(address, _abi, signerOrProvider) as Square;
  }
}
